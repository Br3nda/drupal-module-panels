<?php
// $Id: panels.install,v 1.1.6.16 2007/09/06 00:48:48 merlinofchaos Exp $

/**
 * Install the panels tables
 */
function panels_install() {
  switch ($GLOBALS['db_type']) {
    case 'pgsql':
    case 'mysql':
    case 'mysqli':
    default:
      db_query(<<<EOT
        CREATE TABLE {panels_page} (
          pid int(10) NOT NULL DEFAULT 0 PRIMARY KEY,
          name varchar(255) UNIQUE,
          did int(10),
          title varchar(128),
          access varchar(128),
          path varchar(128),
          css_id varchar(128),
          css longtext,
          arguments longtext,
          no_blocks int(1) DEFAULT 0,
          -- menu fields
          menu int(1) DEFAULT 0,
          menu_tab int(1),
          menu_tab_weight int(4),
          menu_title varchar(255),
          menu_tab_default int(1),
          menu_tab_default_parent_type varchar(10),
          menu_parent_title varchar(255),
          menu_parent_tab_weight int(4),
          KEY path (path)
        )/*!40100 DEFAULT CHARACTER SET utf8 */
EOT
      );

      db_query(<<<EOT
        CREATE TABLE {panels_display} (
          did INT(10) NOT NULL DEFAULT 0 PRIMARY KEY,
          name varchar(255) UNIQUE,
          layout VARCHAR(32),
          layout_settings longtext,
          panel_settings longtext
        ) /*!40100 DEFAULT CHARACTER SET utf8 */
EOT
      );

      db_query(<<<EOT
        CREATE TABLE {panels_pane} (
          pid int(10) NOT NULL DEFAULT 0,
          did int(10) NOT NULL DEFAULT 0,
          panel varchar(32),
          type varchar(32),
          access varchar(128),
          configuration longtext,
          position int(5),
          key (did)
        ) /*!40100 DEFAULT CHARACTER SET utf8 */
EOT
      );
  }
  if (!module_exists('panels_page')) {
    drupal_set_message(t('It is recommended that you also enable the Panels page module.'));
  }
}

function panels_uninstall() {
  db_query("DROP TABLE IF EXISTS {panels_display}");
  db_query("DROP TABLE IF EXISTS {panels_pane}");
  db_query("DROP TABLE IF EXISTS {panels_page}");
}

/**
 * Update the tables to UTF-8
 */
function panels_update_1() {
  return _system_update_utf8(array('panels_info', 'panels_area'));
}


function panels_update_1000() {
  $ret = array();
  $ret[] = update_sql("ALTER TABLE {panels_info} RENAME {panels_page}");
  $ret[] = update_sql("ALTER TABLE {panels_page} CHANGE COLUMN did pid int(10) NOT NULL DEFAULT 0;");
  $ret[] = update_sql("ALTER TABLE {panels_page} ADD COLUMN did int(10) NOT NULL DEFAULT 0 AFTER pid");
  $ret[] = update_sql("UPDATE {panels_page} SET did = pid");
  
  $max_pid = db_result(db_query("SELECT MAX(pid) FROM {panels_page}"));
  if ($max_pid) {
    $ret[] = update_sql("INSERT INTO {sequences} (name, id) VALUES ('{panels_page}_pid', $max_pid)");
  }

  $ret[] = update_sql("ALTER TABLE {panels_area} RENAME {panels_pane}");
  $ret[] = update_sql("ALTER TABLE {panels_pane} ADD COLUMN pid int(10) NOT NULL DEFAULT 0 FIRST");
  $ret[] = update_sql("ALTER TABLE {panels_pane} CHANGE area panel varchar(32)");
  $result = db_query("SELECT * FROM {panels_pane}");
  while ($pane = db_fetch_object($result)) {
    $count++;
    $ret[] = update_sql("UPDATE {panels_pane} SET pid = $count WHERE did = $pane->did AND panel = '$pane->panel' AND position = $pane->position");
  }
  if ($count) {
    $ret[] = update_sql("INSERT INTO {sequences} (name, id) VALUES ('{panels_pane}_pid', $count)");
  }

  $ret[] = update_sql(<<<EOT
    CREATE TABLE {panels_display} (
      did INT(10) NOT NULL DEFAULT 0 PRIMARY KEY,
      layout VARCHAR(32)
    ) /*!40100 DEFAULT CHARACTER SET utf8 */
EOT
);
  $result = db_query("SELECT did, layout FROM {panels_page}");
  $max_did = 0;
  while ($display = db_fetch_object($result)) {
    $ret[] = update_sql("INSERT INTO {panels_display} VALUES ($display->did, '$display->layout')");
    if ($display->did > $max_did) { 
      $max_did = $display->did;
    }
  }
  $ret[] = update_sql("ALTER TABLE {panels_page} DROP COLUMN layout");
  if ($max_did) {
    $ret[] = update_sql("INSERT INTO {sequences} (name, id) VALUES ('{panels_display}_did', $max_did)");
  }
  return $ret;
}

function panels_update_1001() {
  $ret = array();
  $ret[] = update_sql("ALTER TABLE {panels_page} ADD COLUMN no_blocks int(1)");
  $ret[] = update_sql("ALTER TABLE {panels_page} ADD COLUMN menu int(1) DEFAULT 0");
  $ret[] = update_sql("ALTER TABLE {panels_page} ADD COLUMN menu_tab int(1)");
  $ret[] = update_sql("ALTER TABLE {panels_page} ADD COLUMN menu_tab_weight int(4)");
  $ret[] = update_sql("ALTER TABLE {panels_page} ADD COLUMN menu_title varchar(255)");
  $ret[] = update_sql("ALTER TABLE {panels_page} ADD COLUMN menu_tab_default int(1)");
  $ret[] = update_sql("ALTER TABLE {panels_page} ADD COLUMN menu_tab_default_parent_type varchar(10)");
  $ret[] = update_sql("ALTER TABLE {panels_page} ADD COLUMN menu_parent_title varchar(255)");
  $ret[] = update_sql("ALTER TABLE {panels_page} ADD COLUMN menu_parent_tab_weight int(4)");
  return $ret;
}

// Create a field for the layout settings
function panels_update_1002() {
  $ret = array();
  $ret[] = update_sql("ALTER TABLE {panels_display} ADD COLUMN layout_settings longtext");
  $ret[] = update_sql("ALTER TABLE {panels_pane} ADD COLUMN access varchar(128) AFTER type");
  $ret[] = update_sql("ALTER TABLE {panels_page} ADD COLUMN css longtext AFTER css_id");
  return $ret;
}

// Create a field for the panel settings.
function panels_update_1003() {
  $ret = array();
  $ret[] = update_sql("ALTER TABLE {panels_display} ADD COLUMN panel_settings longtext");
  return $ret;
}

// Create a field for the panel settings.
// Renumbering to proper numbering scheme.
function panels_update_5204() {
  $ret = array();
  $ret[] = update_sql("ALTER TABLE {panels_page} ADD COLUMN name varchar(255) UNIQUE");
  $ret[] = update_sql("ALTER TABLE {panels_display} ADD COLUMN name varchar(255) UNIQUE");
  // Give all our panels a name.
  $ret[] = update_sql("UPDATE {panels_page} SET name = CONCAT('display_', pid)");
  $ret[] = update_sql("UPDATE {panels_display} SET name = CONCAT('display_', did)");
  return $ret;
}

// Add the arguments field
function panels_update_5205() {
  $ret = array();
  $ret[] = update_sql("ALTER TABLE {panels_page} ADD COLUMN arguments longtext");
  return $ret;
}

// Add a field so that panes can remember their subtype so we can retrieve
// context information about it.
function panels_update_5206() {
  $ret = array();
  $ret[] = update_sql("ALTER TABLE {panels_pane} ADD COLUMN subtype varchar(64)");
  return $ret;
}
