<?php

/**
 * Implementation of hook_menu().
 */
function panels_ipe_menu() {
  $items = array();

  $items['panels/ajax/render-pane/%/%panels_edit_cache'] = array(
    'page callback' => 'panels_ipe_ajax_render_pane',
    'access arguments' => array('access content'),
    'type' => MENU_CALLBACK,
    'page arguments' => array(3, 4),
  );
  return $items;
}

/**
 * Implementation of hook_ctools_plugin_directory().
 */
function panels_ipe_ctools_plugin_directory($module, $plugin) {
  if ($module == 'panels' && $plugin == 'display_renderers') {
    return 'plugins/' . $plugin;
  }
}

/**
 * Implementation of hook_theme().
 */
function panels_ipe_theme() {
  return array(
    'panels_ipe_pane_wrapper' => array(
      'arguments' => array('output' => NULL, 'pane' => NULL, 'display' => NULL),
    ),
    'panels_ipe_region_wrapper' => array(
      'arguments' => array('output' => NULL, 'region_name' => NULL, 'display' => NULL),
    ),
  );
}

/**
 * Implementation of dynamic ctools plugin registration hook.
 *
 * The definition here fulfills the same purpose as the $plugin = array(...)
 * pattern that now appears in most ctools plugins as a standard.
 */
function panels_ipe_panels_display_renderers() {
  $plugins = array();
  $plugins['panels_renderer_ipe'] = array(
    'handler' => array(
      'path' => drupal_get_path('module', 'panels_ipe') . '/plugins/display_renderers',
      'file' => 'panels_renderer_ipe.inc',
      'class' => 'panels_renderer_ipe',
      'parent' => 'panels_renderer_standard',
    ),
  );
  $plugins['panels_renderer_single_pane'] = array(
    'handler' => array(
      'path' => drupal_get_path('module', 'panels_ipe') . '/plugins/display_renderers',
      'file' => 'panels_renderer_single_pane.inc',
      'class' => 'panels_renderer_single_pane',
      'parent' => 'panels_renderer_standard',
    ),
  );
  return $plugins;
}

function theme_panels_ipe_pane_wrapper($output, $pane, $display) {
  $links = array(
    'edit' => array(
      'title' => t('edit'),
      'href' => "panels/ajax/configure/$display->cache_key/$pane->pid",
      'attributes' => array(
        'class' => 'ctools-use-modal',
        // 'id' => "pane-edit-panel-pane-$pane->pid",
      ),
    ),
    // Deleting is managed entirely in the js; this is just an attachment point
    // for it
    'delete' => array(
      'title' => t('delete'),
      'href' => '#',
      'attributes' => array(
        'class' => 'pane-delete',
        'id' => "pane-delete-panel-pane-$pane->pid",
      ),
    ),
  );
  $attr = array(
    'class' => 'panels-ipe-linkbar',
  );

  $links = theme('links', $links, $attr);
  $links .= '<div class=panels-ipe-draghandle><span>DRAGGER</span></div>';
  $handlebar = '<div class="panels-ipe-handlebar-wrapper clear-block">' . $links . '</div>';
  return $handlebar . $output;
}

function theme_panels_ipe_region_wrapper($output, $region_name, $display) {
  return $output;
}

function panels_ipe_ajax_render_pane($pid, &$display) {
  $class = ctools_plugin_load_class('panels', 'display_renderers', 'panels_renderer_single_pane', 'handler');
  $renderer = new $class();
  $renderer->build($display, $pid);
  $output = array();
  $output[] = ctools_ajax_command_replace("#panels-ipe-paneid-$pid > .panels-ipe-proper-pane", $renderer->render());

  ctools_ajax_render($output);
}

/**
 * Experimenting with this as a means for outputting the display editor form.
 * @param unknown_type $main
 */
function panels_ipe_footer($main = 0) {

}

/**
 * COPIED STRAIGHT OUT OF DISPLAY-EDIT.INC.
 *
 * This duplication will go away...once I figure out how to refactor out the
 * hard-codedness of much of display-edit.inc.
 */
/**
 * AJAX entry point for to configure a pane that has just been added.
 */
function panels_ajax_add_pane_config($cache, $panel_id = NULL, $type_name = NULL, $subtype_name = NULL, $step = NULL) {
  ctools_include('content');
  $cache_key = $cache->display->cache_key;
  $content_type = ctools_get_content_type($type_name);
  $subtype = ctools_content_get_subtype($content_type, $subtype_name);

  if (!isset($step) || !isset($cache->new_pane)) {
    $pane = panels_new_pane($type_name, $subtype_name);
    $pane->configuration = ctools_content_get_defaults($content_type, $subtype);
    $pane->panel = $panel_id;
    $cache->new_pane = &$pane;
  }
  else {
    $pane = $cache->new_pane;
  }

  $form_state = array(
    'display' => &$cache->display,
    'contexts' => $cache->display->context,
    'pane' => &$pane,
    'cache_key' => $cache_key,
    'cache' => &$cache,
    'ajax' => TRUE,
    'modal' => TRUE,
    'commands' => array(),
  );

  $form_info = array(
    'path' => "panels/ajax/add-pane-config/$cache_key/$panel_id/$type_name/$subtype_name/%step",
    'next callback' => 'panels_ajax_edit_pane_config_next',
    'finish callback' => 'panels_ajax_add_pane_config_finish',
  );

  $rc = ctools_content_form('add', $form_info, $form_state, $content_type, $pane->subtype, $subtype, $pane->configuration, $step);
  if ($rc === FALSE) {
    panels_ajax_add_pane_config_finish($form_state);
    $form_state['commands'][] = ctools_modal_command_dismiss();
    ctools_ajax_render($form_state['commands']);
  }
}

/**
 * AJAX entry point for to configure a pane that has just been added.
 */
function panels_ajax_configure_pane($cache, $pid = NULL, $step = NULL) {
  ctools_include('content');
  $cache_key = $cache->display->cache_key;
  if (empty($cache->display->content[$pid])) {
    ctools_modal_render(t('Error'), t('Invalid pane id.'));
  }

  $pane = &$cache->display->content[$pid];

  $content_type = ctools_get_content_type($pane->type);
  $subtype = ctools_content_get_subtype($content_type, $pane->subtype);

  $form_state = array(
    'display' => &$cache->display,
    'contexts' => $cache->display->context,
    'pane' => &$pane,
    'cache' => &$cache,
    'ajax' => TRUE,
    'modal' => TRUE,
    'commands' => array(),
  );

  $form_info = array(
    'path' => "panels/ajax/configure/$cache_key/$pid/%step",
    'next callback' => 'panels_ajax_edit_pane_config_next',
    'finish callback' => 'panels_ajax_edit_pane_config_finish',
  );

  ctools_content_form('edit', $form_info, $form_state, $content_type, $pane->subtype,  $subtype, $pane->configuration, $step);
}

function panels_ajax_edit_pane_config_next(&$form_state) {
  $form_state['cache']->new_pane = $form_state['pane'];
  panels_edit_cache_set($form_state['cache']);
}

function panels_ajax_add_pane_config_finish(&$form_state) {
  $cache = &$form_state['cache'];
  $pane = $cache->new_pane;
  unset($cache->new_pane);

  // Get a real pid for this pane.
  $pane->pid = "new-" . $cache->display->next_new_pid();
  // Put the pane into the display where it belongs

  $cache->display->content[$pane->pid] = $pane;
  $cache->display->panels[$pane->panel][] = $pane->pid;

  panels_edit_cache_set($cache);

  $form_state['commands'][] = ctools_ajax_command_append("#panel-pane-$pane->panel", panels_show_pane($cache->display, $pane, TRUE));
  $form_state['commands'][] = ctools_ajax_command_changed("#panel-pane-$pane->pid", "div.grabber span.text");
}

function panels_ajax_edit_pane_config_finish(&$form_state) {
  $cache = &$form_state['cache'];
  $pane = &$form_state['pane'];
  panels_edit_cache_set($cache);

  $form_state['commands'][] = ctools_ajax_command_replace("#panel-pane-$pane->pid", panels_show_pane($cache->display, $pane, TRUE));
  $form_state['commands'][] = ctools_ajax_command_changed("#panel-pane-$pane->pid", "div.grabber span.text");
}