<?php

/**
 * Implementation of hook_menu().
 */
function panels_ipe_menu() {
  $items = array();

  $base = array(
    'access arguments' => array('administer page manager'), // TODO this clearly needs changing
    'type' => MENU_CALLBACK,
    'page arguments' => array(3),
  );

  $items['panels_ipe/ajax/render-pane/%/%panels_edit_cache'] = array(
    'page callback' => 'panels_ipe_ajax_render_pane',
    'page arguments' => array(3, 4),
  ) + $base;
  $items['panels_ipe/ajax/add-pane/%panels_edit_cache'] = array(
    'page callback' => 'panels_ipe_ajax_add_pane_choose',
  ) + $base;
  $items['panels_ipe/ajax/add-pane-config/%panels_edit_cache'] = array(
    'page callback' => 'panels_ipe_ajax_add_pane_config',
  ) + $base;
  $items['panels_ipe/ajax/configure/%panels_edit_cache'] = array(
    'page callback' => 'panels_ipe_ajax_configure_pane',
  ) + $base;
  $items['panels_ipe/ajax/save/%panels_edit_cache'] = array(
    'page callback' => 'panels_ipe_ajax_save_display',
  ) + $base;
  $items['panels_ipe/ajax/edit/%panels_edit_cache'] = array(
    'page callback' => 'panels_ipe_ajax_edit',
  ) + $base;

  return $items;
}

/**
 * Implementation of hook_ctools_plugin_directory().
 */
function panels_ipe_ctools_plugin_directory($module, $plugin) {
  if ($module == 'panels' && $plugin == 'display_renderers') {
    return 'plugins/' . $plugin;
  }
}

/**
 * Implementation of hook_theme().
 */
function panels_ipe_theme() {
  return array(
    'panels_ipe_pane_wrapper' => array(
      'arguments' => array('output' => NULL, 'pane' => NULL, 'display' => NULL),
    ),
    'panels_ipe_region_wrapper' => array(
      'arguments' => array('output' => NULL, 'region_name' => NULL, 'display' => NULL),
    ),
    'panels_ipe_dnd_form_container' => array(
      'arguments' => array('link' => NULL, 'cache_key' => NULL, 'display' => NULL),
    ),
  );
}

function theme_panels_ipe_pane_wrapper($output, $pane, $display) {
  $links = array(
    'edit' => array(
      'title' => t('edit'),
      'href' => "panels_ipe/ajax/configure/$display->cache_key/$pane->pid",
      'attributes' => array(
        'class' => 'ctools-use-modal',
        // 'id' => "pane-edit-panel-pane-$pane->pid",
      ),
    ),
    // Deleting is managed entirely in the js; this is just an attachment point
    // for it
    'delete' => array(
      'title' => t('delete'),
      'href' => '#',
      'attributes' => array(
        'class' => 'pane-delete',
        'id' => "pane-delete-panel-pane-$pane->pid",
      ),
    ),
  );
  $attr = array(
    'class' => 'panels-ipe-linkbar',
  );

  $links = theme('links', $links, $attr);
  $links .= '<div class="panels-ipe-draghandle"><span>DRAGGER</span></div>';
  $handlebar = '<div class="panels-ipe-handlebar-wrapper panels-ipe-on clear-block">' . $links . '</div>';
  return $handlebar . $output;
}

function theme_panels_ipe_region_wrapper($output, $region_name, $display) {
  $attr = array('class' => 'ctools-use-modal');
  $link = l(t('add new pane'), "panels_ipe/ajax/add-pane/$display->cache_key/$region_name", array('attributes' => $attr));
  $button = '<div class="panels-ipe-newblock panels-ipe-on">' . $link . '</div>';
  return $output . $button;
}

function panels_ipe_ajax_render_pane($pid, $cache) {
  $class = ctools_plugin_load_class('panels', 'display_renderers', 'panels_renderer_single_pane', 'handler');
  $renderer = new $class();
  $renderer->build($cache->display, $pid);
  $output = array();
  $output[] = ctools_ajax_command_replace("#panels-ipe-paneid-$pid > .panels-ipe-proper-pane", $renderer->render());

  ctools_ajax_render($output);
}

function panels_ipe_get_cache_key($key = NULL) {
  static $cache;
  if (isset($key)) {
    $cache = $key;
  }
  return $cache;
}

/**
 * AJAX entry point to create the controller form for an IPE.
 *
 * TODO this can be moved into the IPE plugin probably
 */
function panels_ipe_ajax_edit($cache) {
  $display = $cache->display;
  ctools_include('form');

  $form_state = array(
    'display' => &$display,
    'content_types' => $cache->content_types,
    'rerender' => FALSE,
    'no_redirect' => TRUE,
  );

  $output = ctools_build_form('panels_ipe_edit_control_form', $form_state);
  // no output == submit
  if (!$output) {
    if (!empty($form_state['clicked_button']['#save-display'])) {
      panels_save_display($display);
    }
    // panels_cache_clear('display', $display->did);
    drupal_json(1);
  }
  else {
    drupal_json($output);
  }
  exit;
}

function panels_ipe_edit_control_form(&$form_state) {
  $display = &$form_state['display'];
  $display->cache_key = isset($display->cache_key) ? $display->cache_key : $display->did;

  // Annoyingly, theme doesn't have access to form_state so we have to do this.
  $form['#display'] = $display;

  $layout = panels_get_layout($display->layout);
  $layout_panels = panels_get_panels($layout, $display);

  $form['panel'] = array('#tree' => TRUE);
  $form['panel']['pane'] = array('#tree' => TRUE);

  foreach ($layout_panels as $panel_id => $title) {
    // Make sure we at least have an empty array for all possible locations.
    if (!isset($display->panels[$panel_id])) {
      $display->panels[$panel_id] = array();
    }

    $form['panel']['pane'][$panel_id] = array(
      // Use 'hidden' instead of 'value' so the js can access it.
      '#type' => 'hidden',
      '#default_value' => implode(',', (array) $display->panels[$panel_id]),
    );
  }

  $form['buttons']['submit'] = array(
    '#type' => 'submit',
    '#value' => t('Save'),
    '#id' => 'panels-ipe-save',
    '#submit' => array('panels_edit_display_form_submit'),
    '#save-display' => TRUE,
  );
  $form['buttons']['cancel'] = array(
    '#type' => 'submit',
    '#value' => t('Cancel'),
  );
  return $form;
}

/**
 * Experimenting with this as a means for outputting the display editor form.
 * @param unknown_type $main
 */
function panels_ipe_footer($main = 0) {
  $key = panels_ipe_get_cache_key();
  if (!isset($key)) {
    return;
  }
  // TODO should be moved into the IPE plugin - WAAAY too hardcoded right now
  $output = "<div id='panels-ipe-control-container' class='clear-block'>";
  $output .= "<div id='panels-ipe-control-$key' class='panels-ipe-control'>";
  $output .= "<div class='panels-ipe-startedit panels-ipe-pseudobutton panels-ipe-off'>";
  $output .= "<span>" . t('Customize this page') . "</span>";
  $output .= "</div>";
  $output .= "<div class='panels-ipe-form-container panels-ipe-on clear-block'</div>";
  $output .= "</div></div>";
  return $output;
}

/**
 * COPIED STRAIGHT OUT OF DISPLAY-EDIT.INC.
 *
 * This duplication will go away...once I figure out how to refactor out the
 * hard-codedness of much of display-edit.inc.
 */


/**
 * Entry point for AJAX: 'Add Content' modal form, from which the user selects the
 * type of pane to add.
 *
 * @param int $cache
 *  The display id of the $display object currently being edited.
 * @param string $panel_id
 *  A string with the name of the panel region to which the selected
 *  pane type will be added.
 */
function panels_ipe_ajax_add_pane_choose($cache, $panel_id = NULL, $category = NULL) {
  $display = $cache->display;
  $layout = panels_get_layout($display->layout);
  $layout_panels = panels_get_panels($layout, $display);

  if ($layout && array_key_exists($panel_id, $layout_panels)) {
    ctools_modal_render(
      t('Add content to !s', array('!s' => $layout_panels[$panel_id])),
      panels_ipe_add_content($cache, $panel_id, $category)
    );
  }

  ctools_modal_render(t('Error'), t('Invalid input'));
}

/**
 * Display a list of content available.
 */
function panels_ipe_add_content($cache, $panel_id, $key) {
  ctools_include('content');
  $cache_key = $cache->display->cache_key;

  $category_names = array();
  $categories = array();
  $titles     = array();

  foreach ($cache->content_types as $type_name => $subtypes) {
    if (is_array($subtypes)) {
      $content_type = ctools_get_content_type($type_name);
      foreach ($subtypes as $subtype_name => $subtype_info) {
        $title = filter_xss_admin($subtype_info['title']);
        $description = isset($subtype_info['description']) ? $subtype_info['description'] : $title;

        $icon = ctools_content_admin_icon($subtype_info);

        if (isset($subtype_info['top level'])) {
          $category = 'root';
        }
        else if (isset($subtype_info['category'])) {
          if (is_array($subtype_info['category'])) {
            list($category, $weight) = $subtype_info['category'];
          }
          else {
            $category = $subtype_info['category'];
          }
        }
        else {
          $category = t('Uncategorized');
        }

        $category_key = preg_replace('/[^a-z0-9]/', '-', strtolower($category));

        $output = '<div class="content-type-button clear-block">';
        $url = "panels_ipe/ajax/add-pane-config/$cache_key/$panel_id/$type_name/$subtype_name";
        $output .= ctools_ajax_image_button($icon, $url, $description, 'panels-modal-add-config');
        $output .= '<div>' . ctools_ajax_text_button($title, $url, $description, 'panels-modal-add-config') . '</div>';
        $output .= '</div>';
        if (!isset($categories[$category_key])) {
          $category_names[$category_key] = $category;
          $categories[$category_key] = array();
          $titles[$category_key] = array();
        }

        $categories[$category_key][] = $output;
        $titles[$category_key][] = $title;
      }
    }
  }
  if (!$categories) {
    $output = t('There are no content types you may add to this display.');
  }
  else {
    if (!empty($category_names['root'])) {
      unset($category_names['root']);
    }

    $output = '<div class="panels-add-content-modal">';
    natcasesort($category_names);
    $selector = '<div class="panels-categories-box">';

    // Render our list of categories in column 0.
    foreach ($category_names as $category => $name) {
      $class = 'panels-modal-add-category';
      if ($category == $key) {
        $class .= ' active';
      }

      $url = "panels_ipe/ajax/add-pane/$cache_key/$panel_id/$category";
      $selector .= ctools_ajax_text_button($name, $url, '', $class);
    }

    $selector .= '</div>';
    if (!empty($categories['root'])) {
      foreach ($titles['root'] as $id => $title) {
        $selector .= $categories['root'][$id];
      }
    }

    if (empty($key) || empty($category_names[$key]) || $key == 'root') {
//      $key = current(array_keys($category_names));
      $center = '<div class="panels-categories-description">';
      $center .= t('Content options are divided by category. Please select a category from the left to proceed.');
      $center .= '</div>';
    }
    else {
      natcasesort($titles[$key]);

      // Fill out the info for our current category.
      $columns = 2;
      $col[1] = '';
      $col[2] = '';

      $col_size = count($titles[$key]) / $columns;
      $count = 0;
      foreach ($titles[$key] as $id => $title) {
        $which = floor($count++ / $col_size) + 1; // we leave 0 for the categories.
        $col[$which] .= $categories[$key][$id];
      }

      $center = '';
      foreach ($col as $id => $column) {
        $center .= '<div class="panels-section-column panels-section-column-' . $id . '">'
        . '<div class="inside">' . $column . '</div></div>';
      }
      $center .= '</div>'; // columns
    }
    $output .= '<div class="panels-section-column panels-section-column-categories">'
      . '<div class="inside">' . $selector . '</div></div>';
    $output .= '<div class="panels-section-columns">';
    $output .= $center;
    $output .= '</div>'; // categories box
  }
  return $output;
}

/**
 * AJAX entry point for to configure a pane that has just been added.
 */
function panels_ipe_ajax_add_pane_config($cache, $panel_id = NULL, $type_name = NULL, $subtype_name = NULL, $step = NULL) {
  ctools_include('content');
  $cache_key = $cache->display->cache_key;
  $content_type = ctools_get_content_type($type_name);
  $subtype = ctools_content_get_subtype($content_type, $subtype_name);

  if (!isset($step) || !isset($cache->new_pane)) {
    $pane = panels_new_pane($type_name, $subtype_name);
    $pane->configuration = ctools_content_get_defaults($content_type, $subtype);
    $pane->panel = $panel_id;
    $cache->new_pane = &$pane;
  }
  else {
    $pane = $cache->new_pane;
  }

  $form_state = array(
    'display' => &$cache->display,
    'contexts' => $cache->display->context,
    'pane' => &$pane,
    'cache_key' => $cache_key,
    'cache' => &$cache,
    'ajax' => TRUE,
    'modal' => TRUE,
    'commands' => array(),
  );

  $form_info = array(
    'path' => "panels_ipe/ajax/add-pane-config/$cache_key/$panel_id/$type_name/$subtype_name/%step",
    'next callback' => 'panels_ipe_ajax_edit_pane_config_next',
    'finish callback' => 'panels_ipe_ajax_add_pane_config_finish',
  );

  $rc = ctools_content_form('add', $form_info, $form_state, $content_type, $pane->subtype, $subtype, $pane->configuration, $step);
  if ($rc === FALSE) {
    panels_ipe_ajax_add_pane_config_finish($form_state);
    $form_state['commands'][] = ctools_modal_command_dismiss();
    ctools_ajax_render($form_state['commands']);
  }
}

/**
 * AJAX entry point for to configure a pane that has just been added.
 */
function panels_ipe_ajax_configure_pane($cache, $pid = NULL, $step = NULL) {
  ctools_include('content');
  $cache_key = $cache->display->cache_key;
  if (empty($cache->display->content[$pid])) {
    ctools_modal_render(t('Error'), t('Invalid pane id.'));
  }

  $pane = &$cache->display->content[$pid];

  $content_type = ctools_get_content_type($pane->type);
  $subtype = ctools_content_get_subtype($content_type, $pane->subtype);

  $form_state = array(
    'display' => &$cache->display,
    'contexts' => $cache->display->context,
    'pane' => &$pane,
    'cache' => &$cache,
    'ajax' => TRUE,
    'modal' => TRUE,
    'commands' => array(),
  );

  $form_info = array(
    'path' => "panels_ipe/ajax/configure/$cache_key/$pid/%step",
    'next callback' => 'panels_ipe_ajax_edit_pane_config_next',
    'finish callback' => 'panels_ipe_ajax_edit_pane_config_finish',
  );

  ctools_content_form('edit', $form_info, $form_state, $content_type, $pane->subtype,  $subtype, $pane->configuration, $step);
}

function panels_ipe_ajax_edit_pane_config_next(&$form_state) {
  $form_state['cache']->new_pane = $form_state['pane'];
  panels_edit_cache_set($form_state['cache']);
}

function panels_ipe_ajax_add_pane_config_finish(&$form_state) {
  $cache = &$form_state['cache'];
  $pane = $cache->new_pane;
  unset($cache->new_pane);

  // Get a real pid for this pane.
  $pane->pid = "new-" . $cache->display->next_new_pid();
  // Put the pane into the display where it belongs

  $cache->display->content[$pane->pid] = $pane;
  $cache->display->panels[$pane->panel][] = $pane->pid;

  panels_edit_cache_set($cache);

  $class = ctools_plugin_load_class('panels', 'display_renderers', 'panels_renderer_ipe', 'handler');
  $renderer = new $class();
  $renderer->build($cache->display, array());

  $form_state['commands'][] = ctools_ajax_command_append("#panels-ipe-regionid-$pane->panel", $renderer->render_pane($pane));
}

function panels_ipe_ajax_edit_pane_config_finish(&$form_state) {
  $cache = &$form_state['cache'];
  $pane = &$form_state['pane'];
  panels_edit_cache_set($cache);

  $class = ctools_plugin_load_class('panels', 'display_renderers', 'panels_renderer_single_pane', 'handler');
  $renderer = new $class();
  $renderer->build($cache->display, $pane->pid);

  $form_state['commands'][] = ctools_ajax_command_replace("#panels-ipe-paneid-$pane->pid > .panels-ipe-proper-pane", $renderer->render());
}
